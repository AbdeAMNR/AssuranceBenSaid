/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assurancebensaidv2;

import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amnrLaptop
 */
public final class PnlClients extends javax.swing.JPanel {

    private PnlHome home = new PnlHome();
    private HashMap<String, String> usageItem = new HashMap<>();
    private final jdbcManager cnx;
    private ResultSet res = null;
    private final DefaultTableModel cltModel = SecurityFunc.modelNoEditableCell();
    private final DefaultTableModel vehModel = SecurityFunc.modelNoEditableCell();
    private final String[] cltHeader = {"CIN", "Nom complète", "Téléphone", "Adresse"};
    private final String[] vehHeader = {"CIN", "matricule", "carburant", "Puissance", "Usage"};

    public PnlClients() {
        initComponents();
        this.cnx = new jdbcManager();
        cnx.fillCbx("SELECT * FROM Usages", cbxUsage, "libaleUsage");
        usageItem.putAll(cnx.item);
        SecurityFunc.setTable(cltModel, cltHeader, tblClt);
        SecurityFunc.setTable(vehModel, vehHeader, tblVheh);
        loadClients();
        loadVehicules();

        SecurityFunc.waterMark(txtCin, " N° CIN");
        SecurityFunc.waterMark(txtCinVeh, " N° CIN");
        SecurityFunc.waterMark(txtNomComplet, " Nom et prénom");
        SecurityFunc.waterMark(txtAdrsClient, " Adresse de client");
        SecurityFunc.waterMark(txtTeleClient, " Téléphone");
        SecurityFunc.waterMark(txtNumMatric, " Matricule");
        SecurityFunc.waterMark(txtPuissance, " Puissance");
        SecurityFunc.waterMark(txtCarburant, " Carburant");
        SecurityFunc.waterMark(txtSearch, " Commencez la recherche par  le CIN");
    }

    public void loadClients() {
        try {
            String query;
            query = "SELECT * FROM client;";
            res = cnx.select(query);

            cltModel.setRowCount(0);
            while (res.next()) {
                cltModel.addRow(new Object[]{
                    res.getString("cin"), res.getString("nomComplet"),
                    res.getString("teleClient"), res.getString("adrsClient")
                });
            }
        } catch (SQLException e) {
            System.err.println(e);
        }
    }

    public void loadVehicules() {
        try {
            String query;
            query = "SELECT v.cin,v.numMatric, v.carburant,v.Puissance,u.libaleUsage"
                    + " FROM vehicle v JOIN usages u ON v.idUsage=u.idUsage;";
            res = cnx.select(query);
            vehModel.setRowCount(0);
            while (res.next()) {
                vehModel.addRow(new Object[]{
                    res.getString("cin"), res.getString("numMatric"),
                    res.getString("carburant"), res.getString("Puissance"), res.getString("libaleUsage")
                });
            }
        } catch (SQLException e) {
            System.err.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlClient = new javax.swing.JPanel();
        txtCin = new javax.swing.JTextField();
        txtAdrsClient = new javax.swing.JTextField();
        txtNomComplet = new javax.swing.JTextField();
        txtTeleClient = new javax.swing.JTextField();
        pnlVehicule = new javax.swing.JPanel();
        txtNumMatric = new javax.swing.JTextField();
        txtCarburant = new javax.swing.JTextField();
        txtPuissance = new javax.swing.JTextField();
        cbxUsage = new javax.swing.JComboBox<>();
        txtCinVeh = new javax.swing.JTextField();
        pnlControles = new javax.swing.JPanel();
        cmdRemove = new javax.swing.JPanel();
        btnTxtAdd4 = new javax.swing.JLabel();
        cmdAdd = new javax.swing.JPanel();
        btnTxtAdd3 = new javax.swing.JLabel();
        cmdUpdate = new javax.swing.JPanel();
        btnTxtAdd5 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        cmdAddVeh = new javax.swing.JPanel();
        btnTxtAdd6 = new javax.swing.JLabel();
        pnlClt = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClt = new javax.swing.JTable();
        pnlVeh = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVheh = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(883, 433));

        pnlClient.setBackground(new java.awt.Color(255, 255, 255));
        pnlClient.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "ssssssssssssssss", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 102, 102)), "Créer un nouveau client", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(231, 71, 0))); // NOI18N
        pnlClient.setMinimumSize(new java.awt.Dimension(430, 157));
        pnlClient.setPreferredSize(new java.awt.Dimension(430, 157));

        txtCin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCin.setMaximumSize(new java.awt.Dimension(190, 25));
        txtCin.setMinimumSize(new java.awt.Dimension(190, 25));
        txtCin.setPreferredSize(new java.awt.Dimension(190, 25));
        txtCin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCinKeyReleased(evt);
            }
        });

        txtAdrsClient.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAdrsClient.setMaximumSize(new java.awt.Dimension(190, 25));
        txtAdrsClient.setMinimumSize(new java.awt.Dimension(190, 25));
        txtAdrsClient.setPreferredSize(new java.awt.Dimension(190, 25));

        txtNomComplet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNomComplet.setMaximumSize(new java.awt.Dimension(190, 25));
        txtNomComplet.setMinimumSize(new java.awt.Dimension(190, 25));
        txtNomComplet.setPreferredSize(new java.awt.Dimension(190, 25));

        txtTeleClient.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTeleClient.setMaximumSize(new java.awt.Dimension(190, 25));
        txtTeleClient.setMinimumSize(new java.awt.Dimension(190, 25));
        txtTeleClient.setPreferredSize(new java.awt.Dimension(190, 25));

        javax.swing.GroupLayout pnlClientLayout = new javax.swing.GroupLayout(pnlClient);
        pnlClient.setLayout(pnlClientLayout);
        pnlClientLayout.setHorizontalGroup(
            pnlClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAdrsClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTeleClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNomComplet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlClientLayout.setVerticalGroup(
            pnlClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomComplet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdrsClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTeleClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlVehicule.setBackground(new java.awt.Color(255, 255, 255));
        pnlVehicule.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "ssssssssssssssss", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 102, 102)), "Ajoutez les détails du véhicule", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(231, 71, 0))); // NOI18N
        pnlVehicule.setMinimumSize(new java.awt.Dimension(430, 157));
        pnlVehicule.setPreferredSize(new java.awt.Dimension(430, 157));

        txtNumMatric.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNumMatric.setMaximumSize(new java.awt.Dimension(190, 25));
        txtNumMatric.setMinimumSize(new java.awt.Dimension(190, 25));
        txtNumMatric.setPreferredSize(new java.awt.Dimension(190, 25));

        txtCarburant.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCarburant.setMaximumSize(new java.awt.Dimension(190, 25));
        txtCarburant.setMinimumSize(new java.awt.Dimension(190, 25));
        txtCarburant.setPreferredSize(new java.awt.Dimension(190, 25));

        txtPuissance.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPuissance.setMaximumSize(new java.awt.Dimension(190, 25));
        txtPuissance.setMinimumSize(new java.awt.Dimension(190, 25));
        txtPuissance.setPreferredSize(new java.awt.Dimension(190, 25));

        cbxUsage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbxUsage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxUsage.setMaximumSize(new java.awt.Dimension(190, 25));
        cbxUsage.setMinimumSize(new java.awt.Dimension(190, 25));
        cbxUsage.setPreferredSize(new java.awt.Dimension(190, 25));

        javax.swing.GroupLayout pnlVehiculeLayout = new javax.swing.GroupLayout(pnlVehicule);
        pnlVehicule.setLayout(pnlVehiculeLayout);
        pnlVehiculeLayout.setHorizontalGroup(
            pnlVehiculeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlVehiculeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVehiculeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCarburant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlVehiculeLayout.createSequentialGroup()
                        .addComponent(txtCinVeh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNumMatric, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(pnlVehiculeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPuissance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxUsage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        pnlVehiculeLayout.setVerticalGroup(
            pnlVehiculeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVehiculeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVehiculeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlVehiculeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNumMatric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPuissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCinVeh))
                .addGap(18, 18, 18)
                .addGroup(pnlVehiculeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCarburant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxUsage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlControles.setBackground(new java.awt.Color(255, 204, 153));
        pnlControles.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cmdRemove.setBackground(new java.awt.Color(77, 102, 132));
        cmdRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdRemove.setMaximumSize(null);
        cmdRemove.setMinimumSize(new java.awt.Dimension(60, 32));
        cmdRemove.setName(""); // NOI18N
        cmdRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdRemoveMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdRemoveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdRemoveMouseEntered(evt);
            }
        });

        btnTxtAdd4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTxtAdd4.setForeground(new java.awt.Color(255, 255, 255));
        btnTxtAdd4.setText("Supprimer");

        javax.swing.GroupLayout cmdRemoveLayout = new javax.swing.GroupLayout(cmdRemove);
        cmdRemove.setLayout(cmdRemoveLayout);
        cmdRemoveLayout.setHorizontalGroup(
            cmdRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmdRemoveLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTxtAdd4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cmdRemoveLayout.setVerticalGroup(
            cmdRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmdRemoveLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTxtAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmdAdd.setBackground(new java.awt.Color(77, 102, 132));
        cmdAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdAdd.setMaximumSize(null);
        cmdAdd.setMinimumSize(new java.awt.Dimension(60, 32));
        cmdAdd.setName(""); // NOI18N
        cmdAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdAddMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdAddMouseEntered(evt);
            }
        });

        btnTxtAdd3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTxtAdd3.setForeground(new java.awt.Color(255, 255, 255));
        btnTxtAdd3.setText("Ajouter");

        javax.swing.GroupLayout cmdAddLayout = new javax.swing.GroupLayout(cmdAdd);
        cmdAdd.setLayout(cmdAddLayout);
        cmdAddLayout.setHorizontalGroup(
            cmdAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmdAddLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(btnTxtAdd3)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        cmdAddLayout.setVerticalGroup(
            cmdAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmdAddLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTxtAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmdUpdate.setBackground(new java.awt.Color(77, 102, 132));
        cmdUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdUpdate.setMaximumSize(null);
        cmdUpdate.setMinimumSize(new java.awt.Dimension(60, 32));
        cmdUpdate.setName(""); // NOI18N
        cmdUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdUpdateMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdUpdateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdUpdateMouseEntered(evt);
            }
        });

        btnTxtAdd5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTxtAdd5.setForeground(new java.awt.Color(255, 255, 255));
        btnTxtAdd5.setText("Modifier");

        javax.swing.GroupLayout cmdUpdateLayout = new javax.swing.GroupLayout(cmdUpdate);
        cmdUpdate.setLayout(cmdUpdateLayout);
        cmdUpdateLayout.setHorizontalGroup(
            cmdUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmdUpdateLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(btnTxtAdd5)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        cmdUpdateLayout.setVerticalGroup(
            cmdUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmdUpdateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTxtAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSearch.setMaximumSize(new java.awt.Dimension(400, 25));
        txtSearch.setMinimumSize(new java.awt.Dimension(330, 25));
        txtSearch.setPreferredSize(new java.awt.Dimension(330, 25));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        cmdAddVeh.setBackground(new java.awt.Color(77, 102, 132));
        cmdAddVeh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdAddVeh.setMaximumSize(null);
        cmdAddVeh.setMinimumSize(new java.awt.Dimension(60, 32));
        cmdAddVeh.setName(""); // NOI18N
        cmdAddVeh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdAddVehMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdAddVehMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdAddVehMouseEntered(evt);
            }
        });

        btnTxtAdd6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTxtAdd6.setForeground(new java.awt.Color(255, 255, 255));
        btnTxtAdd6.setText("Ajouter un véhicule");

        javax.swing.GroupLayout cmdAddVehLayout = new javax.swing.GroupLayout(cmdAddVeh);
        cmdAddVeh.setLayout(cmdAddVehLayout);
        cmdAddVehLayout.setHorizontalGroup(
            cmdAddVehLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmdAddVehLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTxtAdd6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cmdAddVehLayout.setVerticalGroup(
            cmdAddVehLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmdAddVehLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTxtAdd6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlControlesLayout = new javax.swing.GroupLayout(pnlControles);
        pnlControles.setLayout(pnlControlesLayout);
        pnlControlesLayout.setHorizontalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlesLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(cmdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdAddVeh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(cmdRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlControlesLayout.setVerticalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlesLayout.createSequentialGroup()
                .addGroup(pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlControlesLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdAddVeh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlControlesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );

        pnlClt.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(231, 71, 0));
        jLabel1.setText("Clients");

        tblClt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblClt.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblClt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCltMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClt);

        javax.swing.GroupLayout pnlCltLayout = new javax.swing.GroupLayout(pnlClt);
        pnlClt.setLayout(pnlCltLayout);
        pnlCltLayout.setHorizontalGroup(
            pnlCltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCltLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlCltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(pnlCltLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCltLayout.setVerticalGroup(
            pnlCltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCltLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        pnlVeh.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(231, 71, 0));
        jLabel2.setText("Véhicules");

        tblVheh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblVheh.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblVheh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVhehMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblVheh);

        javax.swing.GroupLayout pnlVehLayout = new javax.swing.GroupLayout(pnlVeh);
        pnlVeh.setLayout(pnlVehLayout);
        pnlVehLayout.setHorizontalGroup(
            pnlVehLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVehLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVehLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addGroup(pnlVehLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlVehLayout.setVerticalGroup(
            pnlVehLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVehLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnlClient, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlVehicule, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE))
                    .addComponent(pnlControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlClt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlVeh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlVehicule, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlClient, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(pnlControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlVeh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlClt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdRemoveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdRemoveMouseEntered
        cmdRemove.setBackground(Color.decode("#FF4C65"));
    }//GEN-LAST:event_cmdRemoveMouseEntered

    private void cmdRemoveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdRemoveMouseExited
        cmdRemove.setBackground(Color.decode("#4D6684"));
    }//GEN-LAST:event_cmdRemoveMouseExited

    private void cmdAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdAddMouseEntered
        cmdAdd.setBackground(Color.decode("#3D3D3D"));
    }//GEN-LAST:event_cmdAddMouseEntered

    private void cmdAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdAddMouseExited
        cmdAdd.setBackground(Color.decode("#4D6684"));
    }//GEN-LAST:event_cmdAddMouseExited

    private void cmdUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdUpdateMouseEntered
        cmdUpdate.setBackground(Color.decode("#3D3D3D"));
    }//GEN-LAST:event_cmdUpdateMouseEntered

    private void cmdUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdUpdateMouseExited
        cmdUpdate.setBackground(Color.decode("#4D6684"));
    }//GEN-LAST:event_cmdUpdateMouseExited

    private void cmdAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdAddMouseClicked
        String cin = txtCin.getText().trim();
        String nom = txtNomComplet.getText().trim();
        String adrs = txtAdrsClient.getText().trim();
        String tel = txtTeleClient.getText().trim();
        //--------------------------------------------------------------
        String matric = txtNumMatric.getText().trim();
        String puiss = txtPuissance.getText().trim();
        String carb = txtCarburant.getText().trim();
        System.out.println(usageItem.get(this.cbxUsage.getSelectedItem().toString()));
        int usage = Integer.parseInt(usageItem.get(this.cbxUsage.getSelectedItem().toString()));
        String newCin = "";
        int effected = 0;
        //------get rid of watermark------------------------------------
        if (cin.equals("N° CIN")) {
            cin = "";
        }

        if (nom.equals("Nom et prénom")) {
            nom = "";
        }
        if (adrs.equals("Adresse de client")) {
            adrs = "";
        }
        if (tel.equals("Téléphone")) {
            tel = "";
        }
        if (matric.equals("Matricule de véhicule")) {
            matric = "";
        }
        if (puiss.equals("Puissance")) {
            puiss = "";
        }
        if (carb.equals("Carburant")) {
            carb = "";
        }

        //------------------------------------------------------------------------
        res = cnx.select("SELECT * FROM client WHERE cin ='" + cin + "'");
        try {
            if (res.first()) {
                JOptionPane.showMessageDialog(null, "Le client existe déjà", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                return;
            } else {
                res = cnx.select("SELECT * FROM vehicle WHERE numMatric='" + matric + "'");
                if (res.first()) {
                    JOptionPane.showMessageDialog(null, "Le véhicule existe déjà", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PnlClients.class.getName()).log(Level.SEVERE, null, ex);
        }

//------------------------------------------------------------------------------------------------------------
        try {
            //--------check wanted insertion (client)
            if (!this.txtCin.getText().trim().equals("N° CIN") && txtNumMatric.getText().trim().equals("Matricule")) {
                //insertion of new client 
                if (SecurityFunc.isNullOrWhiteSpace(cin) || SecurityFunc.isNullOrWhiteSpace(nom)) {
                    JOptionPane.showMessageDialog(null, "Champ vide ou il y a des espaces", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String rqtInsert = "INSERT INTO Client (cin, nomComplet, adrsClient, teleClient) "
                            + "VALUES ('" + cin + "', '" + nom + "', '" + adrs + "', '" + tel + "');";
                    System.out.println(rqtInsert);
                    effected = cnx.update(rqtInsert);
                    cnx.saveOperation("Insertion de client " + cin, SecurityFunc.logIn);
                }
                //--------check wanted insertion (véhicule)
            } else if (this.txtCin.getText().trim().equals("N° CIN") && !txtNumMatric.getText().trim().equals("Matricule")) {
                //insertion of new vehicle's details
                if (SecurityFunc.isNullOrWhiteSpace(matric) || SecurityFunc.isNullOrWhiteSpace(newCin)) {
                    JOptionPane.showMessageDialog(null, "Champ vide ou il y a des espaces", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String rqtInsert = "INSERT INTO Vehicle (numMatric, Puissance, carburant, idUsage, cin) "
                            + "VALUES ('" + matric + "', '" + puiss + "', '" + carb + "', '" + usage + "', '" + newCin + "');";
                    System.out.println(rqtInsert);
                    effected = cnx.update(rqtInsert);
                    cnx.saveOperation("Insertion de véhicule avec matricule: " + matric, SecurityFunc.logIn);
                }
                //--------check wanted insertion (client and véhicule  )
            } else if (!this.txtCin.getText().trim().equals("N° CIN") && !txtNumMatric.getText().trim().equals("Matricule de véhicule")) {
                //insertion of new client 
                if (SecurityFunc.isNullOrWhiteSpace(cin) || SecurityFunc.isNullOrWhiteSpace(nom)) {
                    JOptionPane.showMessageDialog(null, "Champ vide ou il y a des espaces", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String rqtInsert = "INSERT INTO Client (cin, nomComplet, adrsClient, teleClient) "
                            + "VALUES ('" + cin + "', '" + nom + "', '" + adrs + "', '" + tel + "');";
                    System.out.println(rqtInsert);
                    cnx.update(rqtInsert);
                    cnx.saveOperation("Insertion de client " + cin, SecurityFunc.logIn);
                }
                //insertion of new vehicle's details
                if (SecurityFunc.isNullOrWhiteSpace(matric)) {
                    JOptionPane.showMessageDialog(null, "Champ vide ou il y a des espaces", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String rqtInsert = "INSERT INTO Vehicle (numMatric, Puissance, carburant, idUsage, cin) "
                            + "VALUES ('" + matric + "', '" + puiss + "', '" + carb + "', '" + usage + "', '" + cin + "');";
                    System.out.println(rqtInsert);
                    effected = cnx.update(rqtInsert);
                    cnx.saveOperation("Insertion de véhicule avec matricule: " + matric, SecurityFunc.logIn);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Champ vide ou il y a des espaces", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException ex) {
            System.err.println(ex);
        } finally {
            try {
                res.close();
            } catch (SQLException ex) {
                Logger.getLogger(PnlClients.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (effected != 0) {
            loadClients();
            loadVehicules();
        }
        cnx.fillCombobox("SELECT * FROM client", PnlQuitt.cbxCltName, "nomComplet", "cin");
        PnlQuitt.cltList.clear();
        PnlQuitt.cltList.putAll(cnx.item);
        home.loadOpt();
        SecurityFunc.SuccessfullyOperation();
    }//GEN-LAST:event_cmdAddMouseClicked

    private void runSearch(String key) {
        try {
            String query = "SELECT * FROM client where cin LIKE '%" + key + "%';";
            res = cnx.select(query);

            cltModel.setRowCount(0);
            while (res.next()) {
                cltModel.addRow(new Object[]{
                    res.getString("cin"), res.getString("nomComplet"),
                    res.getString("teleClient"), res.getString("adrsClient")
                });
            }
        } catch (SQLException e) {
            System.err.println(e);
        }
//-------------------------------------------------------------------------------------------------
        try {
            String query = "SELECT v.cin,v.numMatric, v.carburant,v.Puissance,u.libaleUsage FROM vehicle v JOIN usages u ON v.idUsage=u.idUsage WHERE v.cin LIKE '%" + key + "%';";
            res = cnx.select(query);
            vehModel.setRowCount(0);
            while (res.next()) {
                vehModel.addRow(new Object[]{
                    res.getString("cin"), res.getString("numMatric"),
                    res.getString("carburant"), res.getString("Puissance"), res.getString("libaleUsage")
                });
            }
        } catch (SQLException e) {
            System.err.println(e);
        }
    }
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String key = this.txtSearch.getText().trim();
        if (key.equals("")) {
            this.txtSearch.setText("");
            loadClients();
            loadVehicules();
        } else {
            runSearch(key);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cmdRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdRemoveMouseClicked
        int optChoisie;
        int cltRow = -1;
        cltRow = tblClt.getSelectedRow();
        int vehRow = -1;
        vehRow = tblVheh.getSelectedRow();
        /*check if cltRow selected in vehicule table*/
        if (vehRow != -1) {
            optChoisie = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer ce véhicule?", "Attendez une seconde", JOptionPane.YES_NO_OPTION);
            if (optChoisie == 0) {
                String value = tblVheh.getValueAt(vehRow, 1).toString();
                String delQuery = "DELETE FROM Vehicle WHERE numMatric = '" + value + "';";
                System.out.println(delQuery);
                cnx.update(delQuery);
                cnx.saveOperation("Vehicle avec matricule " + value + " est supprimé", SecurityFunc.logIn);
            } else if (cltRow != -1) {
                /*check if cltRow selected in jtable*/
                optChoisie = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer les informations de ce client?\nVeuillez noter que tous les véhicules liés à ce client seront supprimés", "Attendez une seconde", JOptionPane.YES_NO_OPTION);
                if (optChoisie == 0) {
                    /*check if cltRow selected in jtable*/
                    String value = tblClt.getValueAt(cltRow, 0).toString();
                    String delQuery = "DELETE FROM Client WHERE cin = '" + value + "';";
                    System.out.println(delQuery);
                    cnx.update(delQuery);
                    cnx.saveOperation("Client avec cin " + value + " est supprimé", SecurityFunc.logIn);
                }
            } else {
                JOptionPane.showMessageDialog(this, "S'il vous plaît sélectionner un client", "Erreur", JOptionPane.INFORMATION_MESSAGE);
            }
            String key = this.txtSearch.getText().trim();
            if (key.equals("Commencez la recherche par  le CIN")) {
                loadClients();
                loadVehicules();
            } else {
                runSearch(key);
            }
        }
        tblClt.getSelectionModel().clearSelection();
        tblVheh.getSelectionModel().clearSelection();
        cnx.fillCombobox("SELECT * FROM client", PnlQuitt.cbxCltName, "nomComplet", "cin");
        home.loadOpt();
        SecurityFunc.SuccessfullyOperation();
    }//GEN-LAST:event_cmdRemoveMouseClicked

    private void tblCltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCltMouseClicked
        tblVheh.getSelectionModel().clearSelection();
        int row = tblClt.getSelectedRow();
        this.txtCin.setText((String) tblClt.getValueAt(row, 0));
        this.txtNomComplet.setText((String) tblClt.getValueAt(row, 1));
        this.txtTeleClient.setText((String) tblClt.getValueAt(row, 2));
        this.txtAdrsClient.setText((String) tblClt.getValueAt(row, 3));
        SecurityFunc.defaultInputColor(pnlClient, Color.BLACK);
    }//GEN-LAST:event_tblCltMouseClicked

    private void tblVhehMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVhehMouseClicked
        int row = tblVheh.getSelectedRow();
        this.txtNumMatric.setText((String) tblVheh.getValueAt(row, 1));
        this.txtCarburant.setText((String) tblVheh.getValueAt(row, 2));
        this.txtPuissance.setText((String) tblVheh.getValueAt(row, 3));
        this.cbxUsage.setSelectedItem((String) tblVheh.getValueAt(row, 4));
        SecurityFunc.defaultInputColor(pnlVehicule, Color.BLACK);
    }//GEN-LAST:event_tblVhehMouseClicked

    private void cmdUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdUpdateMouseClicked
        if (!SecurityFunc.isNullOrWhiteSpace(txtCin.getText()) || !SecurityFunc.isNullOrWhiteSpace(txtNumMatric.getText())) {
            String cin;
            String nom;
            String tel;
            String adrs;
            //---------------------------------------------
            String Matric;
            String Puissa;
            String Carbu;
            int Usage;
            //---------------------------------------------
            int cltRow = -1;
            cltRow = tblClt.getSelectedRow();
            //--------------------------------------------
            int vehRow = -1;
            vehRow = tblVheh.getSelectedRow();

            /*check if cltRow selected in vehicule table*/
            if (cltRow != -1 && vehRow != -1) {
                cin = txtCin.getText().trim();
                nom = this.txtNomComplet.getText().trim();
                tel = this.txtTeleClient.getText().trim();
                adrs = this.txtAdrsClient.getText().trim();
                //------------------------------------------------------------
                Matric = txtNumMatric.getText().trim();
                Puissa = this.txtPuissance.getText().trim();
                Carbu = this.txtCarburant.getText().trim();
                Usage = Integer.parseInt(usageItem.get(this.cbxUsage.getSelectedItem().toString()));
                //------------------------------------------------------------
                String rqtUpdate = "UPDATE Client SET cin = '" + cin + "', nomComplet = '" + nom + "', adrsClient ='" + adrs + "' , teleClient = '" + tel + "' WHERE cin = '" + tblClt.getValueAt(tblClt.getSelectedRow(), 0) + "'";
                System.out.println(rqtUpdate);
                cnx.update(rqtUpdate);
                cnx.saveOperation("modification des informations de client " + cin, SecurityFunc.logIn);

                //------------------------------------------------------
                rqtUpdate = "UPDATE Vehicle SET numMatric = '" + Matric + "', Puissance = '" + Puissa + "', carburant ='" + Carbu + "' , idUsage = '" + Usage + "' WHERE numMatric = '" + tblVheh.getValueAt(tblVheh.getSelectedRow(), 1) + "'";
                System.out.println(rqtUpdate);
                cnx.update(rqtUpdate);
                cnx.saveOperation("Modification de véhicule avec matricule: " + Matric, SecurityFunc.logIn);

            } else if (cltRow != -1) {
                cin = txtCin.getText().trim();
                nom = this.txtNomComplet.getText().trim();
                tel = this.txtTeleClient.getText().trim();
                adrs = this.txtAdrsClient.getText().trim();
                //------------------------------------------
                String rqtUpdate = "UPDATE Client SET cin = '" + cin + "', nomComplet = '" + nom + "', adrsClient ='" + adrs + "' , teleClient = '" + tel + "' WHERE cin = '" + tblClt.getValueAt(tblClt.getSelectedRow(), 0) + "'";
                System.out.println(rqtUpdate);
                cnx.update(rqtUpdate);
                cnx.saveOperation("modification des informations de client " + cin, SecurityFunc.logIn);

            } else if (vehRow != -1) {
                Matric = txtNumMatric.getText().trim();
                Puissa = this.txtPuissance.getText().trim();
                Carbu = this.txtCarburant.getText().trim();
                Usage = Integer.parseInt(usageItem.get(this.cbxUsage.getSelectedItem().toString()));
                //----------------------------------------------------
                String rqtUpdate = "UPDATE Vehicle SET numMatric = '" + Matric + "', Puissance = '" + Puissa + "', carburant ='" + Carbu + "' , idUsage = '" + Usage + "' WHERE numMatric = '" + tblVheh.getValueAt(tblVheh.getSelectedRow(), 1) + "'";
                System.out.println(rqtUpdate);
                cnx.update(rqtUpdate);
                cnx.saveOperation("Modification de véhicule avec matricule: " + Matric, SecurityFunc.logIn);
                //------------------------------------------------

            } else {
                JOptionPane.showMessageDialog(this, "S'il vous plaît sélectionner un client", "Erreur", JOptionPane.INFORMATION_MESSAGE);
            }
            loadClients();
            loadVehicules();
            tblClt.getSelectionModel().clearSelection();
            tblVheh.getSelectionModel().clearSelection();
        } else {
            JOptionPane.showMessageDialog(this, "Champ vide", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        cnx.fillCombobox("SELECT * FROM client", PnlQuitt.cbxCltName, "nomComplet", "cin");
        home.loadOpt();
        SecurityFunc.SuccessfullyOperation();
    }//GEN-LAST:event_cmdUpdateMouseClicked

    private void txtCinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCinKeyReleased
        String cin = txtCin.getText().trim();
        //------get rid of watermark------------------------------------
        if (cin.equals("N° CIN")) {
            cin = "";
        }
        if (SecurityFunc.isNullOrWhiteSpace(cin)) {
            txtCinVeh.setEditable(true);
            cmdAddVeh.setVisible(true);
        } else {
            txtCinVeh.setEditable(false);
            cmdAddVeh.setVisible(false);
        }

    }//GEN-LAST:event_txtCinKeyReleased

    private void cmdAddVehMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdAddVehMouseClicked
        ResultSet rs = null;
        String cinV = txtCinVeh.getText().trim();
        String matric = txtNumMatric.getText().trim();
        String puiss = txtPuissance.getText().trim();
        String carb = txtCarburant.getText().trim();
        int usage = Integer.parseInt(usageItem.get(this.cbxUsage.getSelectedItem().toString()));
        int effected = 0;

        //------get rid of watermark------------------------------------
        if (cinV.equals("N° CIN")) {
            cinV = "";
        }
        if (matric.equals("Matricule")) {
            matric = "";
        }
        if (puiss.equals("Puissance")) {
            puiss = "";
        }
        if (carb.equals("Carburant")) {
            carb = "";
        }
      //------------------------------------------------------------------------------------------------------------
        if (SecurityFunc.isNullOrWhiteSpace(matric) || SecurityFunc.isNullOrWhiteSpace(cinV)) {
            JOptionPane.showMessageDialog(null, "Champ vide ou il y a des espaces", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                res = cnx.select("SELECT * FROM client WHERE cin ='" + cinV + "'");
                rs = cnx.select("SELECT * FROM vehicle WHERE numMatric='" + matric + "'");

                if (res.first()) {
                    if (!rs.first()) {
                        //insertion of new vehicle's details
                        String rqtInsert = "INSERT INTO Vehicle (numMatric, Puissance, carburant, idUsage, cin) "
                                + "VALUES ('" + matric + "', '" + puiss + "', '" + carb + "', '" + usage + "', '" + cinV + "');";
                        System.out.println(rqtInsert);
                        effected = cnx.update(rqtInsert);
                        cnx.saveOperation("Insertion de véhicule avec matricule:  " + matric, SecurityFunc.logIn);

                        if (effected != 0) {
                            loadClients();
                            loadVehicules();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Le véhicule existe déjà", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "client not exist", "Invalide", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (HeadlessException | SQLException ex) {
                System.err.println(ex);
            } finally {
                try {
                    res.close();
                } catch (SQLException ex) {
                    Logger.getLogger(PnlClients.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        home.loadOpt();
        SecurityFunc.SuccessfullyOperation();
    }//GEN-LAST:event_cmdAddVehMouseClicked

    private void cmdAddVehMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdAddVehMouseEntered
        cmdAddVeh.setBackground(Color.decode("#3D3D3D"));    }//GEN-LAST:event_cmdAddVehMouseEntered

    private void cmdAddVehMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdAddVehMouseExited
        cmdAddVeh.setBackground(Color.decode("#4D6684"));
    }//GEN-LAST:event_cmdAddVehMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnTxtAdd3;
    private javax.swing.JLabel btnTxtAdd4;
    private javax.swing.JLabel btnTxtAdd5;
    private javax.swing.JLabel btnTxtAdd6;
    private javax.swing.JComboBox<String> cbxUsage;
    private javax.swing.JPanel cmdAdd;
    private javax.swing.JPanel cmdAddVeh;
    private javax.swing.JPanel cmdRemove;
    private javax.swing.JPanel cmdUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlClient;
    private javax.swing.JPanel pnlClt;
    private javax.swing.JPanel pnlControles;
    private javax.swing.JPanel pnlVeh;
    private javax.swing.JPanel pnlVehicule;
    private javax.swing.JTable tblClt;
    private javax.swing.JTable tblVheh;
    private javax.swing.JTextField txtAdrsClient;
    private javax.swing.JTextField txtCarburant;
    private javax.swing.JTextField txtCin;
    private javax.swing.JTextField txtCinVeh;
    private javax.swing.JTextField txtNomComplet;
    private javax.swing.JTextField txtNumMatric;
    private javax.swing.JTextField txtPuissance;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTeleClient;
    // End of variables declaration//GEN-END:variables

}
